library(tidyverse)
library(caret);
library(e1071);
library(MLmetrics);
plsdaSet <- function(a,b,p) {
ind=unlist(sapply(p,function(x){which(b==x)}));
trainInd=sample(ind,0.8*length(ind),replace=FALSE);
testInd=setdiff(ind,trainInd);
dat=cbind(a[trainInd,],(letters[1:length(p)])[as.numeric((as.factor(b[trainInd])))]);
testDat=a[testInd,];
colnames(dat)=c(colnames(a),'group');
sf=twoClassSummary; if (length(p)>2) { sf=multiClassSummary; }
ctrl <- trainControl(
method = "repeatedcv",
repeats = 3,
classProbs = TRUE,
summaryFunction = sf
)
set.seed(123)
plsFit <- train(
group ~ .,
data = (dat),
method = "pls",
preProc = c("center", "scale"),
tuneLength = 15,
trControl = ctrl,
metric = "ROC"
)
pred <- plsFit %>% predict(testDat);
actual = letters[1:length(p)][as.numeric(as.factor(b[testInd]))];
return(list(plsFit,table(actual,pred),trainInd,testInd));
}
euclidDist <-function(a,b) {
return(sqrt(sum((a-b)*(a-b))));
}
distAlone <- function(a,b,u,alt=FALSE) {
ind=unlist(sapply(u,function(x){which(b==x)}));
cents=t(unlist(sapply(u,function(x){
kmeans(a[which(x==b),],1)$center
})));
print(cents)
actual= letters[1:length(u)][as.numeric(as.factor(b[ind]))];
pred = apply(a,1,function(x){
d=sqrt(apply(t(as.numeric(x)-t(cents))^2,1,sum));
if (alt) { lt = 2 }
if (!alt) { lt = 1 }
letters[1:length(u)][order(d)[lt]]
});
return(table(actual,pred));
}
allData = list();
levels = seq(5,25,5);
n=1000;
cols=c(4,6,8,12:18);
for (i in levels/5) {
allData[[i]]=read.table(paste0('~/Desktop/Research/DigitalSpiral/Simulation/N=1000.',levels[i],'.Sims.txt',collapse=''),sep=' ');
allData[[i]]=allData[[i]][,cols];
}
exps=nrow(allData[[1]])/n;
plsds=list();
dists=list();
subj=read.table('~/master',header=T,stringsAsFactors=F,sep='\t');
subj=subj[1:300,-c(4)]
colnames(subj)=colnames(allData[[1]]);
typeMask=rep(rep(1:6,each=5),nrow(subj)/30);
pdf('~/Desktop/Research/DigitalSpiral/Simulation/AllSims.PCA.pdf');
for (i in 2:exps) {
par(mfrow=c(2,(length(levels)+1)/2));
par(pty="s");
tmp=allData[[1]][1:999,]; lvs=rep(1,999);
for (j in 1:length(levels)) {
print(doPCA(rbind(allData[[1]][1:999,],allData[[j]][1:999+(i-1)*1000,]),1:999,1000:1998));
tmp=rbind(tmp,allData[[j]][1:999+(i-1)*1000,]);
lvs=c(lvs,rep(1+j,999));
}
plsds[[i]]=plsdaSet(tmp,lvs,1:(length(levels)+1));
ind=which(typeMask<=2);
dists[[i]]=distAlone(rbind(tmp,subj[ind,]),c(lvs,rep(7,length(ind))),1:(length(levels)+2),TRUE);
}
dev.off();
subjTab=NULL;
distTab=NULL;
library(heatmaply)
pdf('~/Desktop/PLSDA.Heatmap.pdf');
for (i in 2:exps) {
ind=which(typeMask<=2);
p=plsds[[i]][[1]] %>% predict(subj[ind,]);
t=table(p)/length(ind)*100;
subjTab=c(subjTab,t);
(heatmap(t(round(apply(plsds[[6]][[2]],1,function(x){x/sum(x)*100}),2)),Rowv=NA,Colv=NA,hclustfun=NULL,main=paste0(names(t),"=",t,collapse=" ")))
}
dim(subjTab)=c(6,length(subjTab)/6);
subjTab=t(subjTab);
colnames(subjTab)=letters[1:6];
distTab=matrix(0,exps,nrow(dists[[2]]));
colnames(distTab)=letters[1:nrow(dists[[2]])];
for (i in 2:exps) {
distTab[i,colnames(dists[[i]])]=dists[[i]][nrow(dists[[2]]),];
}
distTab=t(apply(distTab,1,function(x){x/sum(x)}))*100;
ggheatmap(subjTab,Colv=NA,Rowv=NA,hclustfun=NULL);
ggheatmap(distTab[2:10,],Colv=NA,Rowv=NA,hclustfun=NULL);
dev.off()
allData = list();
levels = seq(5,25,5);
n=1000;
cols=c(4,6,8,12:18);
for (i in levels/5) {
allData[[i]]=read.table(paste0('~/Desktop/Research/DigitalSpiral/Simulation/N=1000.',levels[i],'.Sims.txt',collapse=''),sep=' ');
allData[[i]]=allData[[i]][,cols];
}
allData[[1]][1,]
allData[[1]][1:2,]
